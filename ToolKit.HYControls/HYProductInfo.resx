<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox_Image.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAIAAAACACAYAAADDPmHLAAAABGdBTUEAALGPC/xhBQAABF9JREFUeF7t
        meFt20AUgzNCmjE6RXYsEHSbLpF/HqbtuXwpnDzbonQn6/H4AR8CJNKdCRJBij6Z8bz8PH1/eTu9t6/4
        lpmFj/LfTr89gsn4VH7oEczAlfI9ghm4U37oESiysPzQI1CCLD/0CBRYWX74uBE8/zi9qolou7Gx/PAx
        I0g+SHkRbRc6lR/uP4LkQ5QX0YbTufxw3xEkH6C8iDaUQeWH+40guby8iDaMweWH+4wgubi8iDaEncoP
        x48gubS8iNadncsPx44gubC8iNaVB5UfjhtBcll5Ea0bDy4/HDOC5KLyIloXDlJ+2H8EySXlRbTNHKz8
        sO8IkgvKi2ibOGj5Yb8RJIeXF9FWc/Dywz4jSA4uL6Ktokj54fYRJIeWF9FoipUfbhtBcmB5EY2iaPnh
        +hEkh5UX0RZTvPxw3QiSg8qLaIsQKT/kR5AcUl5Eu4tY+SE3guSA8iLaTUTLD5ePIHm5vIh2FfHyw2Uj
        SF4sL6KlTFJ+eH8EyUvlRbQvTFZ+eHsEyQvlRbQLJi0/vD6C5OHyItoHk5cf5iNIHiwvop1x+Rd+HUHy
        UHkRzeXnXo4geaC851wu/5b/R5D8sL4uf4n/RpD8QEGXv8x3/waYV93fAP4b4K7afwOcg/3FI0id418B
        gUdw4WX5jeSh8iLaBx7B2a/lN5IHy4toF0w+grz8RvJweRHtC5OO4Hr5jeSF8iJaymQjuF1+I3mpvIh2
        lUlGcL/8RvJieRHtJuIjWFZ+I3m5vIh2F9ERLC+/kRxQXkRbhNgIuPIbySHlRbTFiIyAL7+RHFReRKMo
        PoJ15TeSw8qLaDRFR7C+/EZyYHkRbRXFRrCt/EZyaHkRbTVFRrC9/EZycHkRbRMHH0Gf8hvJ4eVFtM0c
        dAT9ym8kF5QX0bpwsBH0Lb+RXFJeROvGQUbQv/xGclF5Ea0rDx7BmPIbyWXlRbTuPGgE48pvfHs7/VIT
        0Yaw8wjGlm/WsdMIXP6RGTwCl1+BQSNw+ZXoPAKXX5FOI3D5ldk4ApevwMoRuHwlyBG4fEUWjsDlK3Nn
        BC5/Bq6MwOXPxKcRuPwZ+RjBEcvHMqVENIr2v4jZWZV9/nF6RbzrZC9WF9EoPAAhEY3CAxAS0Sg8ACER
        jcIDEBLRKDwAIRGNwgMQEtEoPAAhEY3CAxAS0Sg8ACERjcIDEBLRKDwAIRGNwgMQEtEoPAAhEY3CAxAS
        0Sg8ACERjcIDEBLRKDwAIRGNwgMQEtEoPAAhEY3CAxAS0Sg8ACERjcIDEBLRKDwAIRGNwgMQEtEoPAAh
        EY3CAxAS0Sg8ACERjcIDEBLRKDwAIRGNwgMQEtEoPAAhEY3CAxAS0Sg8ACERjcIDEBLRKDwAIRGNwgMQ
        EtEoPAAhEY3CAxAS0Sg8ACERjcIDEBLRKDwAIRGNwgMQEtEoPAAhEY3CAxAS0Sg8ACERjcIDEBLRKDwA
        IRGNwgMQEtEoPAAhEY3CAxAS0Sg8ACERjWLOATw9/QHM+6Bk26qpYgAAAABJRU5ErkJggg==
</value>
  </data>
</root>